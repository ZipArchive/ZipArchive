language: objective-c
podfile: Example/Podfile
xcode_workspace: Example/ZipArchiveExample.xcworkspace
matrix:
  include:
    - osx_image: xcode10.3 # OS X 10.14
      env: OSX_IMAGE="xcode10.3"
           SDK="macosx"
           DEVICE="OS X 10.14.4"
           
    - osx_image: xcode9.4 # OS X 10.13
      env: OSX_IMAGE="xcode9.4"
           SDK="macosx"
           DEVICE="OS X 10.13"
           
    - osx_image: xcode8.3 # OS X 10.12
      env: OSX_IMAGE="xcode8.3"
           SDK="macosx"
           DEVICE="OS X 10.12"
           
    - osx_image: xcode7.3 # OS X 10.11
      env: OSX_IMAGE="xcode7.3"
           SDK="macosx"
           DEVICE="OS X 10.11"
           
    - osx_image: xcode12
      env: OSX_IMAGE="xcode12"
           SDK="appletvsimulator"
           DEVICE="Apple TV 4K (at 1080p) (14.0)" # newest on travis for tvOS 14.x 

    - osx_image: xcode11.6
      env: OSX_IMAGE="xcode11.6"
           SDK="appletvsimulator"
           DEVICE="Apple TV 4K (at 1080p) (13.4)" # latest for tvOS 13.x
           
    - osx_image: xcode10.3
      env: OSX_IMAGE="xcode10.3"
           SDK="appletvsimulator"
           DEVICE="Apple TV 4K (at 1080p) (12.4)" # latest for tvOS 12.x
           
    - osx_image: xcode9.4
      env: OSX_IMAGE="xcode9.4"
           SDK="appletvsimulator"
           DEVICE="Apple TV 4K (11.4)" # latest for tvOS 11.x
           
    - osx_image: xcode8.3
      env: OSX_IMAGE="xcode8.3"
           SDK="appletvsimulator"
           DEVICE="Apple TV 1080p (10.2)" # latest for tvOS 10.x
           
    - osx_image: xcode8.3
      env: OSX_IMAGE="xcode8.3"
           SDK="appletvsimulator"
           DEVICE="Apple TV 1080p (9.2)" # latest for tvOS 9.x
           
    - osx_image: xcode7.3
      env: OSX_IMAGE="xcode7.3"
           SDK="appletvsimulator"
           DEVICE="Apple TV 1080p (9.0)" # oldest for tvOS 9.x

    - osx_image: xcode12
      env: OSX_IMAGE="xcode12"
           SDK="iphonesimulator"
           DEVICE="iPhone SE (2nd generation) (14.0)" # newest on travis for iOS 14.x
           
    - osx_image: xcode11.6
      env: OSX_IMAGE="xcode11.6"
           SDK="iphonesimulator"
           DEVICE="iPhone 11 Pro Max (13.6)" # latest for iOS 13.x
           
    - osx_image: xcode10.3
      env: OSX_IMAGE="xcode10.3"
           SDK="iphonesimulator"
           DEVICE="iPhone XÊ€ (12.4)" # latest for iOS 12.x
           
    - osx_image: xcode10.1
      env: OSX_IMAGE="xcode10.1"
           SDK="iphonesimulator"
           DEVICE="iPhone X (11.4)" # latest for iOS 11.x
           
    - osx_image: xcode10.1
      env: OSX_IMAGE="xcode10.1"
           SDK="iphonesimulator"
           DEVICE="iPhone X (11.0.1)" # oldest for iOS 11.x
           
    - osx_image: xcode10.1
      env: OSX_IMAGE="xcode10.1"
           SDK="iphonesimulator"
           DEVICE="iPhone 7 Plus (10.3.1)" # latest for iOS 10.x
           
    - osx_image: xcode10.1
      env: OSX_IMAGE="xcode10.1"
           SDK="iphonesimulator"
           DEVICE="iPhone 5 (10.0)" # oldest for iOS 10.x
           
    - osx_image: xcode10.1
      env: OSX_IMAGE="xcode10.1"
           SDK="iphonesimulator"
           DEVICE="iPhone 6s Plus (9.3)" # latest for iOS 9.x
           
    - osx_image: xcode10.1
      env: OSX_IMAGE="xcode10.1"
           SDK="iphonesimulator"
           DEVICE="iPhone 4s (9.0)" # oldest for iOS 9.x

before_install:
  - if [[ ${OSX_IMAGE} != "xcode1"* ]]; then
        echo "Workaround for https://github.com/CocoaPods/CocoaPods/issues/7765 in Xcode 9-";
        gem install cocoapods-downloader -v 1.3.0;
        gem install cocoapods -v '1.7.5';
    fi
  - if [[ ${OSX_IMAGE} = "xcode10"* ]]; then
        echo "Disabling modern build system as a workaround for target issue in Xcode 10";
        USEMODERNBUILDSYSTEM="-UseModernBuildSystem=NO";
    fi
  - if [ ${SDK} = "macosx" ]; then
        SCHEME="ObjectiveCExample_macOS";
    elif [ ${SDK} = "appletvsimulator" ]; then
        SCHEME="ObjectiveCExample_tvOS";
    else
        SCHEME="ObjectiveCExample_iOS";
    fi
  - if [ ${SDK} = "macosx" ]; then
        DESTINATION="platform=macosx";
    else
        DESTINATION_UDID=$(instruments -s devices | grep "$DEVICE \[" | sed -E 's/.*\[([0-9A-F-]+)\].*/\1/g');
        DESTINATION="id=$DESTINATION_UDID";
    fi
  - if [[ ${SDK} = "appletvsimulator" && (${OSX_IMAGE} = "xcode7"* || ${OSX_IMAGE} = "xcode8"*) ]]; then
        echo "Prelaunching simulator to avoid timeout https://github.com/travis-ci/travis-ci/issues/6422 in Xcode 8-";
        open -a Simulator --args -CurrentDeviceUDID $DESTINATION_UDID;
    fi

script:
  # Testing
  - xcodebuild
    `` -workspace Example/ZipArchiveExample.xcworkspace
    `` -scheme $SCHEME
    `` -sdk $SDK
    `` -destination "$DESTINATION"
    `` -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES
    `` $USEMODERNBUILDSYSTEM
    `` test
